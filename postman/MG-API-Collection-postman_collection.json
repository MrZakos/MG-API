{
  "info": {
    "name": "MG API Collection",
    "description": "Complete API collection for MG application with V1 endpoints",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5440",
      "type": "string"
    },
    {
      "key": "token",
      "value": "",
      "type": "string"
    },
    {
      "key": "dataId",
      "value": "",
      "type": "string"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{token}}",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('token', response.token);",
                  "    console.log('User token saved:', response.token);",
                  "    pm.test('Login successful', function () {",
                  "        pm.response.to.have.status(200);",
                  "    });",
                  "} else {",
                  "    pm.test('Login failed', function () {",
                  "        pm.response.to.have.status(401);",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"user123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "login"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Login Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('token', response.token);",
                  "    console.log('Admin token saved:', response.token);",
                  "    pm.test('Admin login successful', function () {",
                  "        pm.response.to.have.status(200);",
                  "    });",
                  "} else {",
                  "    pm.test('Admin login failed', function () {",
                  "        pm.response.to.have.status(401);",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@example.com\",\n  \"password\": \"admin123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "login"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Data API V1",
      "item": [
        {
          "name": "Get Data by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.test('Response has required fields', function () {",
                  "        pm.expect(response).to.have.property('id');",
                  "        pm.expect(response).to.have.property('name');",
                  "        pm.expect(response).to.have.property('description');",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/v1/data/{{dataId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "v1",
                "data",
                "{{dataId}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Create Data (Admin)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('dataId', response.id);",
                  "    console.log('Created data ID:', response.id);",
                  "    pm.test('Data created successfully', function () {",
                  "        pm.response.to.have.status(201);",
                  "        pm.expect(response).to.have.property('id');",
                  "    });",
                  "} else {",
                  "    pm.test('Create data failed', function () {",
                  "        pm.response.to.have.status(403);",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test Data Item\",\n  \"description\": \"This is a test data item created via Postman\",\n  \"value\": \"42\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/v1/data",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "v1",
                "data"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Update Data (Admin)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Update successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.test('Response has updated fields', function () {",
                  "        pm.expect(response).to.have.property('id');",
                  "        pm.expect(response.name).to.include('Updated');",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Test Data Item\",\n  \"description\": \"This data item has been updated via Postman\",\n  \"value\": \"100\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/v1/data/{{dataId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "v1",
                "data",
                "{{dataId}}"
              ]
            }
          },
          "response": []
        }
      ]
    }
  ]
}
